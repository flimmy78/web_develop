<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhicloud.op.mybatis.mapper.EmailTemplateMapper">


	<resultMap type="com.zhicloud.op.vo.EmailTemplateVO" id="EmailTemplateVO">
		<id     column="id"         property="id" />
		<result column="config_id" property="configId" />
        <result column="sender_address" property="senderAddress" />
        <result column="create_time" property="createTime" />
		<result column="modified_time" property="modifiedTime" />
	</resultMap>
	
	<!-- ********************* -->
	
	<insert id="insertTemplate">
		insert into email_template (id, name, config_id, code, recipient, subject, content, create_time, modified_time)
		values (#{id}, #{name}, #{config_id}, #{code}, #{recipient}, #{subject}, #{content}, #{create_time}, #{modified_time})
	</insert>
	
	<!-- ********************* -->

	<select id="queryAllPageCount" resultType="int">
		select count(1)
        from email_template t
        LEFT JOIN email_config c ON t.config_id = c.id
		<where>
			<if test="name!=null and name!='%%'">
				t.name like #{name}
			</if> 
		</where>
	</select>

	<select id="queryAllPage" resultMap="EmailTemplateVO">
		select 
			t.id,
			t.name,
			t.config_id,
            t.code,
            c.sender,
            c.sender_address,
            t.recipient,
			t.subject,
			t.content,
			t.create_time,
			t.modified_time
		from email_template t
        LEFT JOIN email_config c ON t.config_id = c.id
		<where>
			<if test="name!=null and name!='%%'">
				t.name like #{name}
			</if>
		</where>
		order by t.modified_time desc
		limit #{start_row}, #{row_count}
	</select>
	
	<!-- ********************* -->
	<select id="queryTemplateById" resultMap="EmailTemplateVO">
		select
			id,
			name,
			config_id,
            code,
			subject,
            recipient,
			content,
			create_time,
			modified_time
		from email_template
		<where>
			id = #{id}
		</where>
	</select>

    <!-- ********************* -->
    <select id="queryTemplateByCode" resultMap="EmailTemplateVO">
        select
        id,
        name,
        config_id,
        code,
        subject,
        recipient,
        content,
        create_time,
        modified_time
        from email_template
        <where>
            code = #{code}
        </where>
    </select>

	<!-- ********************* -->
	<select id="queryTemplateByName" resultMap="EmailTemplateVO">
		select
		id,
		name,
		config_id,
        code,
		subject,
        recipient,
		content,
		create_time,
		modified_time
		from email_template
		<where>
			name = #{name}
		</where>
	</select>
	
	<!-- ********************* -->
	
	<update id="updateTemplate" >
		update email_template set
			name = #{name},
            code = #{code},
			subject = #{subject},
            recipient = #{recipient},
            content = #{content},
			modified_time = #{modified_time}
		<where>
			id = #{id}
		</where>
	</update>
	
	<!-- ********************* -->

	<delete id="deleteTemplateByIds">
		delete
		from email_template
		where id in
		<foreach collection="array" item="item" open="(" close=")" separator=", ">
			#{item}
		</foreach>
	</delete>
	
</mapper>
